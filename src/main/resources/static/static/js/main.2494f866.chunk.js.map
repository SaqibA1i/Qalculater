{"version":3,"sources":["components/header.js","components/courseAdder.js","components/content.js","components/overview.js","components/adder.js","components/assessments.js","App.js","serviceWorker.js","index.js"],"names":["Header","setCourseBoolHelper","className","class","id","onClick","CourseAdder","courseAddBool","updateJson","data","style","type","placeholder","json","document","getElementById","value","NotificationManager","info","size","Content","setSelHelper","totalAvg","useState","courses","setCourses","useEffect","newCourses","course","push","console","log","map","Overview","selected","getGpa","currentMark","setMark","gpa","setGpa","total","courseCompletion","assessment","toPrecision","newGpa","parseInt","Adder","visible","setVisible","max","min","name","percentage","weightage","updatedAssessments","parseFloat","Assessments","assessments","setAssessments","setCompletion","newAssessments","width","window","confirm","error","a","removeAssessment","App","setData","selectedCourse","setSelected","setCourseBool","gpaScale","0","56","60","63","67","70","73","77","80","85","90","100","NProgress","start","classList","add","XHR","XMLHttpRequest","newForm","FormData","append","JSON","stringify","open","send","onreadystatechange","readyState","DONE","success","responseText","$","get","parse","done","remove","i","length","firstKey","Object","keys","secondKey","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2494f866.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Header({ setCourseBoolHelper }) {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <button\r\n                class=\"header-add-course\"\r\n                id = \"header-add-course\"\r\n                onClick={setCourseBoolHelper}\r\n            >\r\n                +\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import { data } from 'jquery';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\nimport { PlusCircle, Upload } from 'react-bootstrap-icons';\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nfunction CourseAdder({ courseAddBool, updateJson, data }) {\r\n\r\n    const update = () => {\r\n        let json = data;\r\n        json[document.getElementById(\"courseName\").value] = [];\r\n        updateJson(json)\r\n        NotificationManager.info(document.getElementById(\"courseName\").value + \" course is added \")\r\n    }\r\n    return (\r\n        <>\r\n            <NotificationContainer />\r\n            {\r\n                courseAddBool ?\r\n                    <div className=\"adder-container\" style={{ \"margin\": \"40px auto -60px auto\" }} >\r\n                        <div class=\"adder-inputs\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"courseName\"\r\n                                placeholder=\"Add Course Name\" />\r\n                            <button\r\n                                class=\"header-add-course\"\r\n                                onClick={update}\r\n                            >\r\n                                <Upload size={15} />\r\n                        </button>\r\n                        </div>\r\n                    </div > : (\"\")\r\n            }\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default CourseAdder;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Content({ data, setSelHelper, totalAvg }) {\r\n    const [courses, setCourses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let newCourses = []\r\n        for (let course in data) {\r\n            newCourses.push(course);\r\n        }\r\n        setCourses(newCourses);\r\n        console.log(newCourses)\r\n    }, [data])\r\n\r\n    \r\n    return (\r\n        <div className=\"content-container\">\r\n            {\r\n                courses.map(course =>\r\n                    <div className=\"content-course\" id={course} onClick={() => setSelHelper(course)}>\r\n                        {course}\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Content;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Overview({ data, selected, getGpa }) {\r\n    const [currentMark, setMark] = useState(0);\r\n    const [gpa, setGpa] = useState(\"0.00\");\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        let courseCompletion = 0;\r\n        let assessments = data[selected] != null ? data[selected] : [];\r\n        assessments.map(assessment => {\r\n            total += ((assessment[1] / 100) * assessment[2]);\r\n            courseCompletion += assessment[2];\r\n            console.log(total)\r\n        })\r\n        courseCompletion = courseCompletion != 0 ? (total / courseCompletion) : 0;\r\n        setMark((courseCompletion * 100).toPrecision(3));\r\n        let newGpa = getGpa((courseCompletion * 100).toPrecision(3));\r\n        console.log((courseCompletion * 100));\r\n        // set gpa color class\r\n        let num = parseInt(newGpa);\r\n        let className = \"\";\r\n        if (newGpa >= 3.90) {\r\n            className = \"awesome\";\r\n        } else if (newGpa >= 3.70) {\r\n            className = \"good\";\r\n        } else if (newGpa >= 3.3) {\r\n            className = \"okay\";\r\n        } else {\r\n            className = \"bad\";\r\n        }\r\n        if (selected != \"\") {\r\n            let e = document.getElementById(\"overview-gpa\");\r\n            e.className = \"overview-gpa \" + className;\r\n        }\r\n\r\n        setGpa(newGpa);\r\n    }, [data, selected])\r\n    return (\r\n        <div className=\"overview-container\">\r\n            {\r\n                selected != \"\" ? (\r\n                    <>\r\n                        <h1 class=\"overview-header\">{selected}</h1>\r\n                        <div class=\"overview-mark\">\r\n                            <i>{currentMark}%</i>\r\n                            <br />\r\n                            <div id=\"overview-gpa\" class=\"overview-gpa\">{gpa} gpa</div>\r\n                        </div>\r\n                    </>\r\n                ) :\r\n                    (<h1 class=\"overview-header\">Please Select a course</h1>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Overview;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\nimport { PlusCircle, Upload } from 'react-bootstrap-icons';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\n\r\nfunction Adder({ data, selected, updateJson }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const add = () => {\r\n        let name = document.getElementById(\"assessmentName\").value;\r\n        name = (name != \"\" || name != null) ? name : \"unnamed\";\r\n\r\n        let percentage = document.getElementById(\"assessmentPercentage\").value;\r\n        percentage = percentage != null ? percentage : 0;\r\n\r\n        let weightage = document.getElementById(\"assessmentWeightage\").value;\r\n        console.log(weightage);\r\n        weightage = weightage != null ? weightage : 0;\r\n\r\n        let json = data;\r\n        let updatedAssessments = data[selected];\r\n        updatedAssessments.push([name, parseFloat(percentage), parseFloat(weightage)]);\r\n\r\n        json[selected] = updatedAssessments;\r\n        setVisible(false);\r\n        updateJson(json);\r\n        NotificationManager.info(name + \" gained \" + percentage + \"%\", selected)\r\n    }\r\n    return (\r\n        <div className=\"adder-container\">\r\n            {selected != \"\" && (\r\n                <>\r\n                    <button\r\n                        className=\"header-add-course\"\r\n                        onClick={() => setVisible(!visible)}>\r\n                        <PlusCircle size={15} />\r\n                    </button>\r\n                    {visible ?\r\n                        <div class=\"adder-inputs\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"assessmentName\"\r\n                                placeholder=\"Add Assessment Name\" />\r\n                            <div class=\"adder-numbers\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"assessmentPercentage\"\r\n                                    max=\"100\"\r\n                                    min=\"0\"\r\n                                    placeholder=\"Percent\" />\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"assessmentWeightage\"\r\n                                    max=\"100\"\r\n                                    min=\"0\"\r\n                                    placeholder=\"Weight\" />\r\n                            </div>\r\n                            <button\r\n                                class=\"header-add-course\"\r\n                                onClick={add}\r\n                            >\r\n                                <Upload size={15} />\r\n                            </button>\r\n\r\n                        </div> : (\"\")}\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Adder;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\nimport {PenFill, ArchiveFill} from 'react-bootstrap-icons';\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\n\r\nfunction Assessments({ data, selected, updateJson }) {\r\n    const [assessments, setAssessments] = useState([]);\r\n    const [courseCompletion, setCompletion] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let newAssessments = data[selected] != null ? data[selected] : [];\r\n        setAssessments(newAssessments)\r\n\r\n        let total = 0;\r\n        newAssessments.map(assessment => {\r\n            total += assessment[2];\r\n            console.log(assessment[2])\r\n        })\r\n        setCompletion(total);\r\n        setAssessments(newAssessments);\r\n        console.log(total)\r\n        console.log(data[selected])\r\n        // set width of completion bar\r\n        document.getElementById(\"assessment-completion-bar\").style.width = total + \"%\";\r\n    }, [data, selected])\r\n\r\n    const removeAssessment = (assessment) => {\r\n        let result = window.confirm(\"Sure you want to delete ?\");\r\n        if (result) {\r\n            NotificationManager.error(assessment + \" is deleted\", selected)\r\n            let json = data;\r\n            let updatedAssessments = [];\r\n            assessments.map(a => {\r\n                if (a[0] != assessment) {\r\n                    updatedAssessments.push(a);\r\n                }\r\n            }\r\n            )\r\n            json[selected] = updatedAssessments;\r\n            updateJson(json);\r\n        }\r\n\r\n    }\r\n\r\n    const editAssessment = (assessment) =>{\r\n\r\n    }\r\n    return (\r\n        <div className=\"assessment-container\">\r\n            <div class=\"assessment-completion\">\r\n                Course Completion <b>{courseCompletion}</b>  %\r\n            </div>\r\n            <div id=\"assessment-completion-bar\" class=\"assessment-completion-bar\">\r\n\r\n            </div>\r\n            {assessments.map(assessment =>\r\n                <div class=\"assessment-single assessment-data\">\r\n                    <div>\r\n                        <b>{assessment[0]}</b>\r\n                        <p>Mark: {assessment[1]}%</p>\r\n                        <p>Weightage: {assessment[2]}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"header-add-course\"><PenFill size={15} /></button>\r\n                        <button class=\"header-add-course\" onClick={() => removeAssessment(assessment[0])}><ArchiveFill size={15}/></button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Assessments;","import React, { useEffect, useState } from 'react';\r\nimport $ from \"jquery\"\r\nimport './marks-styler.css';\r\n\r\n// Nprogress\r\nimport NProgress from 'nprogress';\r\nimport 'nprogress/nprogress.css';\r\n\r\n// components\r\nimport Header from './components/header'\r\nimport CourseAdder from './components/courseAdder'\r\nimport Content from './components/content'\r\nimport Overview from './components/overview'\r\nimport Adder from './components/adder'\r\nimport Assessments from './components/assessments'\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [totalAvg, setTotalAvg] = useState(0);\r\n  const [selectedCourse, setSelected] = useState(\"\");\r\n  const [courseAddBool, setCourseBool] = useState(false);\r\n  const gpaScale = [\r\n    {0:\"0.00\"},\r\n    {56: \"1.30\"},\r\n    {60: \"1.70\"},\r\n    {63: \"2.00\"},\r\n    {67: \"2.30\"},\r\n    {70: \"2.70\"},\r\n    {73: \"3.00\"},\r\n    {77: \"3.30\"},\r\n    {80: \"3.70\"},\r\n    {85: \"3.90\"},\r\n    {90: \"4.00\"},\r\n    {100: \"4.00\"},\r\n  ]\r\n  useEffect(async () => {\r\n    $.get(\"https://gitlab.com/api/v4/projects/23578539/repository/files/data%2Ejson/raw?ref=master\", function (data) {\r\n      setData(JSON.parse(data))\r\n\r\n    });\r\n  }, [])\r\n\r\n  function getGpa(percentage) {\r\n    if(percentage == 100){\r\n      return \"4.00\";\r\n    }\r\n    for (let i = 0; i < gpaScale.length - 1; i++) {\r\n        let firstKey = parseInt(Object.keys(gpaScale[i])); //56\r\n        let secondKey = parseInt(Object.keys(gpaScale[i + 1]));//60\r\n        if (percentage >= firstKey && percentage < secondKey) {\r\n            return gpaScale[i][firstKey];\r\n        }\r\n    }\r\n    return gpaScale[percentage];\r\n}\r\n  function setSelHelper(course) {\r\n    console.log(course);\r\n    // loop through all courses to remove class\r\n    for (let course in data) {\r\n      document.getElementById(course).classList = \"content-course\";\r\n  }\r\n    document.getElementById(course).classList = \"content-dipped\";\r\n    setSelected(course);\r\n  }\r\n\r\n  function setCourseBoolHelper() {\r\n    setCourseBool(!courseAddBool);\r\n  }\r\n\r\n  function updateJson(json) {\r\n    NProgress.start();\r\n    document.getElementById(\"header-add-course\").classList.add(\"hide\");\r\n    setData(json);\r\n    // Make a post request to the Java backend\r\n    let ip = \"192.168.0.49\";\r\n    const XHR = new XMLHttpRequest();\r\n    let newForm = new FormData();\r\n    newForm.append(\"dataJson\", JSON.stringify(json));\r\n\r\n    XHR.open('POST', \"/update\");\r\n    XHR.send(newForm);\r\n    XHR.onreadystatechange = function () {\r\n      if (XHR.readyState == XMLHttpRequest.DONE) {\r\n        NotificationManager.success(XHR.responseText);\r\n        $.get(\"https://gitlab.com/api/v4/projects/23578539/repository/files/data%2Ejson/raw?ref=master\", function (data) {\r\n          setData(JSON.parse(data))\r\n          NProgress.done();\r\n          document.getElementById(\"header-add-course\").classList.remove(\"hide\");\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        setCourseBoolHelper={setCourseBoolHelper}\r\n        \r\n      />\r\n      <CourseAdder\r\n        courseAddBool={courseAddBool}\r\n        updateJson={updateJson}\r\n        data={data}\r\n      />\r\n      <Content\r\n        data={data}\r\n        setSelHelper={setSelHelper}\r\n        totalAvg={totalAvg}\r\n      />\r\n      <Overview\r\n        data={data}\r\n        selected={selectedCourse}\r\n        getGpa={getGpa}\r\n      />\r\n      <Adder\r\n        data={data}\r\n        selected={selectedCourse}\r\n        updateJson={updateJson}\r\n      />\r\n      <Assessments\r\n        data={data}\r\n        selected={selectedCourse}\r\n        updateJson={updateJson}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}