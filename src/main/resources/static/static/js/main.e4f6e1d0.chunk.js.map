{"version":3,"sources":["components/header.js","components/courseAdder.js","components/content.js","components/overview.js","components/adder.js","components/assessments.js","App.js","serviceWorker.js","index.js"],"names":["Header","setCourseBoolHelper","className","class","onClick","CourseAdder","courseAddBool","updateJson","data","style","type","id","placeholder","json","document","getElementById","value","Content","setSelHelper","useState","courses","setCourses","useEffect","newCourses","course","push","console","log","map","Overview","selected","currentMark","setMark","total","courseCompletion","assessment","toPrecision","Adder","visible","setVisible","max","min","name","percentage","weightage","updatedAssessments","parseInt","Assessments","assessments","setAssessments","setCompletion","newAssessments","a","removeAssessment","App","setData","selectedCourse","setSelected","setCourseBool","XHR","XMLHttpRequest","newForm","FormData","append","JSON","stringify","open","send","window","location","reload","$","get","parse","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4f6e1d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Header({ setCourseBoolHelper }) {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div class=\"header-brand\">\r\n                Qalculater\r\n            </div>\r\n            <button\r\n                class=\"header-add-course\"\r\n                onClick={setCourseBoolHelper}\r\n            >\r\n                +\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import { data } from 'jquery';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction CourseAdder({ courseAddBool, updateJson, data }) {\r\n\r\n    const update = () => {\r\n        let json = data;\r\n        json[document.getElementById(\"courseName\").value] = [];\r\n        updateJson(json)\r\n    }\r\n    return (\r\n        <div className=\"adder-container\" style={{\"margin-top\": \"90px\"}}>\r\n            {courseAddBool ?\r\n                <div class=\"adder-inputs\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"courseName\"\r\n                        placeholder=\"Add Course Name\" />\r\n                    <button\r\n                        class=\"assessment-remove\"\r\n                        onClick={update}\r\n                    >\r\n                        submit\r\n                        </button>\r\n\r\n                </div> : (\"\")\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CourseAdder;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Content({data, setSelHelper}) {\r\n    const [courses, setCourses] = useState([]);\r\n    useEffect(() => {\r\n        let newCourses = []\r\n        for (let course in data) {\r\n            newCourses.push(course);\r\n        }\r\n        setCourses(newCourses);\r\n        console.log(newCourses)\r\n    }, [data])\r\n    return (\r\n        <div className=\"content-container\">\r\n            {\r\n                courses.map(course =>\r\n                    <div className=\"content-course\" onClick={()=>setSelHelper(course)}>\r\n                        {course}\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Content;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Overview({ data, selected }) {\r\n    const [currentMark, setMark] = useState(0);\r\n    useEffect(() => {\r\n        let total = 0;\r\n        let courseCompletion = 0;\r\n        let assessments = data[selected] != null ? data[selected] : [];\r\n        assessments.map(assessment => {\r\n            total += ((assessment[1] / 100) * assessment[2]);\r\n            courseCompletion += assessment[2];\r\n            console.log(total)\r\n        })\r\n        courseCompletion = courseCompletion != 0 ? (total / courseCompletion) : 0;\r\n        setMark((courseCompletion * 100).toPrecision(2));\r\n    }, [selected])\r\n    return (\r\n        <div className=\"overview-container\">\r\n            {\r\n                selected != \"\" ? (\r\n                    <>\r\n                        <h1 class=\"overview-header\">{selected}</h1>\r\n                        <div class = \"overview-mark\"><i>{currentMark}%</i></div>\r\n                    </>\r\n                ) :\r\n                    (<h1 class=\"overview-header\">Please Select a course</h1>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Overview;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Adder({ data, selected, updateJson }) {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const add = () => {\r\n        let name = document.getElementById(\"assessmentName\").value;\r\n        name = (name != \"\" || name != null) ? name : \"unnamed\";\r\n\r\n        let percentage = document.getElementById(\"assessmentPercentage\").value;\r\n        percentage = percentage != null ? percentage : 0;\r\n\r\n        let weightage = document.getElementById(\"assessmentWeightage\").value;\r\n        weightage = weightage != null ? weightage : 0;\r\n\r\n        let json = data;\r\n        let updatedAssessments = data[selected];\r\n        updatedAssessments.push([name, parseInt(percentage), parseInt(weightage)]);\r\n\r\n        json[selected] = updatedAssessments;\r\n        updateJson(json);\r\n    }\r\n    return (\r\n        <div className=\"adder-container\">\r\n            {selected != \"\" && (\r\n                <>\r\n                    <button className=\"adder-button\" onClick={() => setVisible(!visible)}>+</button>\r\n                    {visible ?\r\n                        <div class=\"adder-inputs\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"assessmentName\"\r\n                                placeholder=\"Add Assessment Name\" />\r\n                            <div class=\"adder-numbers\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"assessmentPercentage\"\r\n                                    max=\"100\"\r\n                                    min=\"0\"\r\n                                    placeholder=\"Your percentage acheived\" />\r\n                                <input\r\n                                    type=\"number\"\r\n                                    id=\"assessmentWeightage\"\r\n                                    max=\"100\"\r\n                                    min=\"0\"\r\n                                    placeholder=\"Weight of Assessment\" />\r\n                            </div>\r\n                            <button\r\n                                class=\"assessment-remove\"\r\n                                onClick={add}\r\n                            >\r\n                                submit\r\n                        </button>\r\n\r\n                        </div> : (\"\")}\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Adder;","import React, { useEffect, useState } from 'react';\r\nimport '../marks-styler.css';\r\n\r\nfunction Assessments({ data, selected, updateJson }) {\r\n    const [assessments, setAssessments] = useState([]);\r\n    const [courseCompletion, setCompletion] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let newAssessments = data[selected] != null ? data[selected] : [];\r\n        setAssessments(newAssessments)\r\n\r\n        let total = 0;\r\n        newAssessments.map(assessment => {\r\n            total += assessment[2];\r\n            console.log(assessment[2])\r\n        })\r\n        setCompletion(total);\r\n        console.log(total)\r\n        console.log(data[selected])\r\n    }, [data, selected])\r\n\r\n    const removeAssessment = (assessment) => {\r\n        let json = data;\r\n        let updatedAssessments = [];\r\n        assessments.map(a => {\r\n            if (a[0] != assessment) {\r\n                updatedAssessments.push(a);\r\n            }\r\n        }\r\n        )\r\n        json[selected] = updatedAssessments;\r\n        updateJson(json);\r\n    }\r\n    return (\r\n        <div className=\"assessment-container\">\r\n            <div class=\"assessment-completion\">\r\n                Course Completion <b>{courseCompletion}</b>  %\r\n            </div>\r\n            {assessments.map(assessment =>\r\n                <div class=\"assessment-single assessment-data\">\r\n                    <div>\r\n                        <b>{assessment[0]}</b>\r\n                        <p>{\"Mark: \" + assessment[1] + \" % \"}</p>\r\n                        <p>{\"Weightage: \" + assessment[2]}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"assessment-remove\" onClick={() => removeAssessment(assessment[0])}>X</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Assessments;","import React, { useEffect, useState } from 'react';\r\nimport $ from \"jquery\"\r\nimport './marks-styler.css';\r\n\r\n// components\r\nimport Header from './components/header'\r\nimport CourseAdder from './components/courseAdder'\r\nimport Content from './components/content'\r\nimport Overview from './components/overview'\r\nimport Adder from './components/adder'\r\nimport Assessments from './components/assessments'\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [selectedCourse, setSelected] = useState(\"\");\r\n  const [courseAddBool, setCourseBool] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    $.get(\"https://gitlab.com/api/v4/projects/23578539/repository/files/data%2Ejson/raw?ref=master\", function (data) {\r\n      setData(JSON.parse(data))\r\n    });\r\n  }, [])\r\n\r\n  function setSelHelper(course) {\r\n    console.log(course);\r\n    setSelected(course);\r\n  }\r\n\r\n  function setCourseBoolHelper() {\r\n    setCourseBool(!courseAddBool);\r\n  }\r\n\r\n  function updateJson(json) {\r\n    setData(json);\r\n    // Make a post request to the Java backend\r\n    let ip = \"192.168.0.49\";\r\n    const XHR = new XMLHttpRequest();\r\n    let newForm = new FormData();\r\n    newForm.append(\"dataJson\", JSON.stringify(json));\r\n\r\n    XHR.open('POST', 'http://' + ip + \":8080/update\");\r\n    XHR.send(newForm);\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        setCourseBoolHelper = {setCourseBoolHelper}\r\n      />\r\n      <CourseAdder\r\n        courseAddBool={courseAddBool}\r\n        updateJson={updateJson}\r\n        data = {data}\r\n      />\r\n      <Content\r\n        data={data}\r\n        setSelHelper={setSelHelper}\r\n      />\r\n      <Overview\r\n        data={data}\r\n        selected={selectedCourse}\r\n      />\r\n      <Adder\r\n        data={data}\r\n        selected={selectedCourse}\r\n        updateJson={updateJson}\r\n      />\r\n      <Assessments\r\n        data={data}\r\n        selected={selectedCourse}\r\n        updateJson={updateJson}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}